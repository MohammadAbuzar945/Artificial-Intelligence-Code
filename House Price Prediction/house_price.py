# -*- coding: utf-8 -*-
"""House_Price.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SKq81Nbqx5jRPz-EgmQmLcdBw16qjKGK
"""

import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.linear_model import LinearRegression
# from sklearn.metrics import accuarcy_score
from sklearn.model_selection import train_test_split
import seaborn as sns
import matplotlib.pyplot as plt 
from sklearn import metrics
from sklearn.metrics import accuracy_score

price = pd.read_csv('data.csv')
price.head()

print(price.head())
price = price.astype(int)

price.isna().sum()

# price.info()

# price.drop(columns = ['yr_built', 'yr_renovated'], inplace = True)
# price.info()



x = price.drop(columns ='price' , axis =1)
y = price['price']

print(x)

print(y)

train_X , test_X , train_Y , test_Y = train_test_split(x,y,test_size=0.3 , random_state=100)

model = LinearRegression()

model.fit(train_X , train_Y)

x_prediction = model.predict(train_X)
# y_test = model.predict(test_X)
# accuracy_x = accuracy_score(x_prediction ,train_Y ) *100
# print("Accuracy is :" , accuracy_x , "%")
# print(y_test)
# # print(x_prediction)

input_data = (3,2,1930,11947 , 1 ,0,0,4,1930,0 ,1966,0)
inputarray = np.asarray(input_data)

inputreshape = inputarray.reshape(1,-1)



prediction = model.predict(inputreshape)

print("The decision is :" ,prediction)

